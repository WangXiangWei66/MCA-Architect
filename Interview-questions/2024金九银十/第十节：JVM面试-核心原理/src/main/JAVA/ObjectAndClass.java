import java.nio.ByteBuffer;
//不同类型的变量和对象在JVM中的内存分配方式
/**
 * 代码和对象是如何在JVM中分配
 **/
public class ObjectAndClass {
    //：final常量在编译时被内联到使用处，而静态变量在运行时可修改。
    static int age = 18;//todo 静态变量（基本数据类型）  ---方法区
    final static int sex = 1;//todo 常量（基本数据类型） ---方法区
    //ObjectAndClass object = new ObjectAndClass();//todo 成员变量指向（对象）在类加载的时候不会执行
    //构造方法  -》ObjectAndClass object = new ObjectAndClass();
    private boolean isKing; //todo 成员变量 放在哪里？？？ —— 跟随对象实例存储在堆内存中

    public static void main(String[] args) {//启动一个线程，创建一个虚拟机栈，数据结构，单个，压入一个栈帧
        int x = 18;
        long y = 1;
        ObjectAndClass lobject = new ObjectAndClass();//todo 局部变量 引用  （对象）  lobject 这个是引用
        lobject.isKing = true;// isKing跟随对象，堆空间
        lobject.hashCode();//方法中调用方法  本地方法（C++语言写  JNI）
        ByteBuffer bb = ByteBuffer.allocateDirect(128 * 1024 * 1024);//todo 直接分配128M的直接内存
    }
}
//┌─────────────────────────────────────────────────────────────┐
//│                        本地内存 (Native Memory)                │
//│  ┌───────────────────────┐    ┌─────────────────────────────┐ │
//│  │      直接内存区        │    │       其他本地内存          │ │
//│  │  (ByteBuffer分配的128MB) │    │  (操作系统、JVM自身使用)   │ │
//│  └───────────────────────┘    └─────────────────────────────┘ │
//└─────────────────────────────────────────────────────────────┘
//                              ↑
//                              │
//┌─────────────────────────────────────────────────────────────┐
//│                        Java堆 (Heap)                         │
//│  ┌───────────────────────┐    ┌─────────────────────────────┐ │
//│  │      新生代 (Young)    │    │       老年代 (Old)         │ │
//│  │  ┌───────────┐  ┌─────┐│    │                             │ │
//│  │  │  Eden区   │  │Survivor│    │  ObjectAndClass对象       │ │
//│  │  └───────────┘  └─────┘│    │  (包含isKing字段)           │ │
//│  └───────────────────────┘    └─────────────────────────────┘ │
//└─────────────────────────────────────────────────────────────┘
//                              ↑
//                              │
//┌─────────────────────────────────────────────────────────────┐
//│                     方法区 (Method Area)                     │
//│  ┌───────────────────────┐    ┌─────────────────────────────┐ │
//│  │      类元数据         │    │       运行时常量池          │ │
//│  │  (ObjectAndClass类信息)│    │  (age=18, sex=1等常量)      │ │
//│  └───────────────────────┘    └─────────────────────────────┘ │
//└─────────────────────────────────────────────────────────────┘
//                              ↑
//                              │
//┌─────────────────────────────────────────────────────────────┐
//│                     虚拟机栈 (JVM Stack)                     │
//│  ┌───────────────────────┐                                   │
//│  │      main方法栈帧     │                                   │
//│  │  ┌─────────────────┐  │                                   │
//│  │  │  局部变量表     │  │                                   │
//│  │  │  x=18, y=1      │  │                                   │
//│  │  │  lobject=0x1234 │  │                                   │
//│  │  └─────────────────┘  │                                   │
//│  │  ┌─────────────────┐  │                                   │
//│  │  │  操作数栈       │  │                                   │
//│  │  └─────────────────┘  │                                   │
//│  └───────────────────────┘                                   │
//└─────────────────────────────────────────────────────────────┘
